//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.07.22 at 06:24:47 PM EDT 
//


package universal_bank.crm.enterprise_model.framework.domain_events._1_0;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for enterpriseServicesDomainEvents complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="enterpriseServicesDomainEvents">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="addDomainEvent" type="{http://universal-bank/crm/enterprise-model/framework/domain-events/1.0.0}addDomainEvent" minOccurs="0"/>
 *         &lt;element name="cancelDomainEvent" type="{http://universal-bank/crm/enterprise-model/framework/domain-events/1.0.0}cancelDomainEvent" minOccurs="0"/>
 *         &lt;element name="executeDomesticPaymentDomainEvent" type="{http://universal-bank/crm/enterprise-model/framework/domain-events/1.0.0}executeDomesticPaymentDomainEvent" minOccurs="0"/>
 *         &lt;element name="executeElectronicPaymentDomainEvent" type="{http://universal-bank/crm/enterprise-model/framework/domain-events/1.0.0}executeElectronicPaymentDomainEvent" minOccurs="0"/>
 *         &lt;element name="executeAccountToAccountPaymentDomainEvent" type="{http://universal-bank/crm/enterprise-model/framework/domain-events/1.0.0}executeAccountToAccountPaymentDomainEvent" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "enterpriseServicesDomainEvents", propOrder = {
    "addDomainEvent",
    "cancelDomainEvent",
    "executeDomesticPaymentDomainEvent",
    "executeElectronicPaymentDomainEvent",
    "executeAccountToAccountPaymentDomainEvent"
})
public class EnterpriseServicesDomainEvents {

    protected AddDomainEvent addDomainEvent;
    protected CancelDomainEvent cancelDomainEvent;
    protected ExecuteDomesticPaymentDomainEvent executeDomesticPaymentDomainEvent;
    protected ExecuteElectronicPaymentDomainEvent executeElectronicPaymentDomainEvent;
    protected ExecuteAccountToAccountPaymentDomainEvent executeAccountToAccountPaymentDomainEvent;

    /**
     * Gets the value of the addDomainEvent property.
     * 
     * @return
     *     possible object is
     *     {@link AddDomainEvent }
     *     
     */
    public AddDomainEvent getAddDomainEvent() {
        return addDomainEvent;
    }

    /**
     * Sets the value of the addDomainEvent property.
     * 
     * @param value
     *     allowed object is
     *     {@link AddDomainEvent }
     *     
     */
    public void setAddDomainEvent(AddDomainEvent value) {
        this.addDomainEvent = value;
    }

    /**
     * Gets the value of the cancelDomainEvent property.
     * 
     * @return
     *     possible object is
     *     {@link CancelDomainEvent }
     *     
     */
    public CancelDomainEvent getCancelDomainEvent() {
        return cancelDomainEvent;
    }

    /**
     * Sets the value of the cancelDomainEvent property.
     * 
     * @param value
     *     allowed object is
     *     {@link CancelDomainEvent }
     *     
     */
    public void setCancelDomainEvent(CancelDomainEvent value) {
        this.cancelDomainEvent = value;
    }

    /**
     * Gets the value of the executeDomesticPaymentDomainEvent property.
     * 
     * @return
     *     possible object is
     *     {@link ExecuteDomesticPaymentDomainEvent }
     *     
     */
    public ExecuteDomesticPaymentDomainEvent getExecuteDomesticPaymentDomainEvent() {
        return executeDomesticPaymentDomainEvent;
    }

    /**
     * Sets the value of the executeDomesticPaymentDomainEvent property.
     * 
     * @param value
     *     allowed object is
     *     {@link ExecuteDomesticPaymentDomainEvent }
     *     
     */
    public void setExecuteDomesticPaymentDomainEvent(ExecuteDomesticPaymentDomainEvent value) {
        this.executeDomesticPaymentDomainEvent = value;
    }

    /**
     * Gets the value of the executeElectronicPaymentDomainEvent property.
     * 
     * @return
     *     possible object is
     *     {@link ExecuteElectronicPaymentDomainEvent }
     *     
     */
    public ExecuteElectronicPaymentDomainEvent getExecuteElectronicPaymentDomainEvent() {
        return executeElectronicPaymentDomainEvent;
    }

    /**
     * Sets the value of the executeElectronicPaymentDomainEvent property.
     * 
     * @param value
     *     allowed object is
     *     {@link ExecuteElectronicPaymentDomainEvent }
     *     
     */
    public void setExecuteElectronicPaymentDomainEvent(ExecuteElectronicPaymentDomainEvent value) {
        this.executeElectronicPaymentDomainEvent = value;
    }

    /**
     * Gets the value of the executeAccountToAccountPaymentDomainEvent property.
     * 
     * @return
     *     possible object is
     *     {@link ExecuteAccountToAccountPaymentDomainEvent }
     *     
     */
    public ExecuteAccountToAccountPaymentDomainEvent getExecuteAccountToAccountPaymentDomainEvent() {
        return executeAccountToAccountPaymentDomainEvent;
    }

    /**
     * Sets the value of the executeAccountToAccountPaymentDomainEvent property.
     * 
     * @param value
     *     allowed object is
     *     {@link ExecuteAccountToAccountPaymentDomainEvent }
     *     
     */
    public void setExecuteAccountToAccountPaymentDomainEvent(ExecuteAccountToAccountPaymentDomainEvent value) {
        this.executeAccountToAccountPaymentDomainEvent = value;
    }

}
